# type: ignore
# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import game_pb2 as game__pb2

GRPC_GENERATED_VERSION = '1.73.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in game_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class GameServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.StartGame = channel.unary_unary(
                '/game.GameService/StartGame',
                request_serializer=game__pb2.StartGameRequest.SerializeToString,
                response_deserializer=game__pb2.StartGameResponse.FromString,
                _registered_method=True)
        self.CreateBot = channel.unary_unary(
                '/game.GameService/CreateBot',
                request_serializer=game__pb2.CreateBotRequest.SerializeToString,
                response_deserializer=game__pb2.CreateBotResponse.FromString,
                _registered_method=True)
        self.PlayCard = channel.unary_unary(
                '/game.GameService/PlayCard',
                request_serializer=game__pb2.PlayCardRequest.SerializeToString,
                response_deserializer=game__pb2.PlayCardResponse.FromString,
                _registered_method=True)
        self.GetBotDecision = channel.unary_unary(
                '/game.GameService/GetBotDecision',
                request_serializer=game__pb2.GetBotDecisionRequest.SerializeToString,
                response_deserializer=game__pb2.GetBotDecisionResponse.FromString,
                _registered_method=True)
        self.ResetBot = channel.unary_unary(
                '/game.GameService/ResetBot',
                request_serializer=game__pb2.ResetBotRequest.SerializeToString,
                response_deserializer=game__pb2.ResetBotResponse.FromString,
                _registered_method=True)
        self.GetBotHand = channel.unary_unary(
                '/game.GameService/GetBotHand',
                request_serializer=game__pb2.GetBotHandRequest.SerializeToString,
                response_deserializer=game__pb2.GetBotHandResponse.FromString,
                _registered_method=True)


class GameServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def StartGame(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateBot(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PlayCard(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBotDecision(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResetBot(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBotHand(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GameServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'StartGame': grpc.unary_unary_rpc_method_handler(
                    servicer.StartGame,
                    request_deserializer=game__pb2.StartGameRequest.FromString,
                    response_serializer=game__pb2.StartGameResponse.SerializeToString,
            ),
            'CreateBot': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateBot,
                    request_deserializer=game__pb2.CreateBotRequest.FromString,
                    response_serializer=game__pb2.CreateBotResponse.SerializeToString,
            ),
            'PlayCard': grpc.unary_unary_rpc_method_handler(
                    servicer.PlayCard,
                    request_deserializer=game__pb2.PlayCardRequest.FromString,
                    response_serializer=game__pb2.PlayCardResponse.SerializeToString,
            ),
            'GetBotDecision': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBotDecision,
                    request_deserializer=game__pb2.GetBotDecisionRequest.FromString,
                    response_serializer=game__pb2.GetBotDecisionResponse.SerializeToString,
            ),
            'ResetBot': grpc.unary_unary_rpc_method_handler(
                    servicer.ResetBot,
                    request_deserializer=game__pb2.ResetBotRequest.FromString,
                    response_serializer=game__pb2.ResetBotResponse.SerializeToString,
            ),
            'GetBotHand': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBotHand,
                    request_deserializer=game__pb2.GetBotHandRequest.FromString,
                    response_serializer=game__pb2.GetBotHandResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'game.GameService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('game.GameService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class GameService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def StartGame(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/game.GameService/StartGame',
            game__pb2.StartGameRequest.SerializeToString,
            game__pb2.StartGameResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateBot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/game.GameService/CreateBot',
            game__pb2.CreateBotRequest.SerializeToString,
            game__pb2.CreateBotResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PlayCard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/game.GameService/PlayCard',
            game__pb2.PlayCardRequest.SerializeToString,
            game__pb2.PlayCardResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetBotDecision(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/game.GameService/GetBotDecision',
            game__pb2.GetBotDecisionRequest.SerializeToString,
            game__pb2.GetBotDecisionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ResetBot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/game.GameService/ResetBot',
            game__pb2.ResetBotRequest.SerializeToString,
            game__pb2.ResetBotResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetBotHand(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/game.GameService/GetBotHand',
            game__pb2.GetBotHandRequest.SerializeToString,
            game__pb2.GetBotHandResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
